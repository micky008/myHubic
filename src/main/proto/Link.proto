syntax = "proto3";

option java_package = "com.msc.mydropcloud";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

package proto;

service LinkService {
    /**
    * Check if the client is the first of the list.
    * (if you have many client the first is the truth.)
    * When we you connect and you are not the first, after the file transfert, you are the first.
    */
    rpc ImTheFirst(MacAddress) returns (google.protobuf.BoolValue);

    /**
    * Check if the rootFolder's merkel hash have change.
    * 
    */
    rpc HashChange(Hash) returns (google.protobuf.BoolValue);

    /**
    * If a hash is different of the server, so GetFileTreeFromServer return All 'MyFile' from server
    * make the comparaison with your local.
    * Use this function if 'ImTheFirst' was false
    * client <-- server
    */
    rpc GetFileTreeFromServer(UUID) returns (ArrayMyFile);

    /**
    * If a hash is different of the server, send the tree to the server
    * Use this function if 'ImTheFirst' was true.
    * Send All MyFile from local, it's the server who use the comparator.
    * client --> server    
    * @return: Array Of file's UUID whos changes. 
    *
    *
    */
    rpc SendFileTreeToServer(ArrayMyFile) returns (ArrayUUID);
    
    /**
    * If a client folder dosn't exist isUUIDExist return false, so delete all nodes.
    */
    rpc isUUIDExist(UUID) returns (google.protobuf.BoolValue);

    /**
    * Get the new or updated File.
    * client <-- server
    */
    rpc Get(UUID) returns (google.protobuf.BytesValue);

    /**
    * Send the new file to the server
    * client --> server 
    */
    rpc Send(SendMyMyfile) returns (google.protobuf.BoolValue);

    /**
    * Send the info to the server is finish.
    */
    rpc EndOfTransmission(google.protobuf.Empty) returns (google.protobuf.Empty);

}

message MyFile {
    string endpoint = 1;
    string uuid = 2;
    bool isDir = 3;
    string parent = 4;
    string hash = 5;
    string message = 6;
}

message ArrayMyFile{
    repeated MyFile myfiles = 1;
}

message ArrayUUID{
    repeated UUID uuid = 1; 
}

message SendMyMyfile {
    MyFile myfile = 1;
    bytes content = 2; 
    string pathName = 3;
}

message UUID {
    string uuid = 1;
}

message Hash {
    string hash = 1;
}

message MacAddress {
    string address = 1;
}